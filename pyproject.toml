[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "agrag"
version = "0.0.1"
authors = [
  { name="AutoGluon Community"},
]
description = "An automated RAG pipeline building framework"
readme = "README.md"
requires-python = ">=3.9, <3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Customer Service",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Image Recognition"
]
license = {file = "LICENSE"}

dynamic = ["dependencies"]
[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[project.scripts]
agrag = "agrag.main:ag_rag"

[project.optional-dependencies]
tests = ["pytest", "pytest-mock", "tox"]

# Testing and formatting configurations
[tool.black]
line-length = 119
target-version = ['py39', 'py310']

[tool.isort]
known_first_party = "autogluon"
known_third_party = [
    "numpy",
    "pandas",
    "psutil",
    "pytest",
    "Pillow",
    "boto3"
]
line_length = 119
profile = "black"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--strict-markers"
xfail_strict = true

[tool.setuptools_scm]
write_to = "src/autogluon/agrag/version.py"
