[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "agrag"
dynamic = ["version"]
authors = [
  { name="AutoGluon Community"},
]
description = "An automated RAG pipeline building framework"
readme = "README.md"
requires-python = ">=3.9, <3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Customer Service",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Image Recognition"
]
license = {file = "LICENSE"}
dependencies = [
    "boto3>=1.34.124,<2.0",
    "faiss-cpu>=1.8.0,<2.0",
    "langchain-community>=0.2.4,<1.0",
    "langchain-text-splitters>=0.2.1,<1.0",
    "numpy>=1.26.4,<2.0",
    "openai>=1.34.0,<2.0",
    "pandas>=2.2.2,<3.0",
    "pytest>=8.2.2,<9.0",
    "pypdf>=4.2.0,<5.0",
    "python-docx>=1.1.2,<2.0",
    "pyyaml>=6.0.1,<7.0",
    "scikit-learn>=1.5.0,<2.0",
    "torch>=2.3.1,<3.0",
    "torchvision>=0.18.1,<1.0",
    "transformers>=4.41.2,<5.0",
    "pymilvus>=2.4.1,<3.0",
]


[project.scripts]
agrag = "agrag.main:ag_rag"

[project.optional-dependencies]
tests = ["pytest", "pytest-mock", "tox", "black>=23.1.9, <=23.7.0", "isort>=5.11.0, <=5.12.0"]

# Testing and formatting configurations
[tool.black]
line-length = 119
target-version = ['py39', 'py310', 'py311']

[tool.isort]
known_first_party = "autogluon"
known_third_party = [
    "boto3", 
    "langchain_community", 
    "langchain_text_splitters", 
    "torch", 
    "transformers", 
    "yaml"
]
line_length = 119
profile = "black"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--strict-markers"
xfail_strict = true
filterwarnings = [
    "ignore::DeprecationWarning",
]
